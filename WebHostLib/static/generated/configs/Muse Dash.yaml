# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify your Archipelago settings are valid at this site:
#        https://archipelago.gg/check

# Your name in-game. Spaces will be replaced with underscores and there is a 16-character limit.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: Player{number}

# Used to describe your yaml. Useful if you have multiple files.
description: Default Muse Dash Template

game: Muse Dash
requires:
  version: 0.3.9 # Version of Archipelago required for this yaml to work as expected.

Muse Dash:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  allow_just_as_planned_dlc_songs:
    # Whether or not Just as Planned DLC songs, and all the DLCs along with it, will be included in the randomiser.
    # Note: The newest DLC songs will most likely not be included in any randomisation.
    false: 50
    true: 0

  streamer_mode_enabled:
    # Whether or not the randomisation will take into account Streamer Mode. If enabled, only songs available in Streamer Mode will be randomised.
    false: 50
    true: 0

  starting_song_count:
    # The number of songs that will be automatically unlocked at the start of a run.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 3
    # Maximum value is 10
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  additional_song_count:
    # The total number of songs that will be placed in the randomisation pool.
    # - Does not count any starting songs or the final goal.
    # - Final count may be lower due to other settings.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 15
    # Maximum value is 400
    31: 50
    random: 0
    random-low: 0
    random-high: 0

  additional_item_percentage:
    # What percentage of songs will have 2 items instead of 1. Starting Songs are always first in line to have extra locations.
    # If there are not enough locations to place Music Sheets, extra locations will be added.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    33: 50
    random: 0
    random-low: 0
    random-high: 0

  song_difficulty_mode:
    # Filters songs based:
    # - Easy: At least 1 difficulty between 1-5
    # - Medium: At least 1 difficulty between 5-8
    # - Hard: At least 1 difficulty between 8+
    # - Any: All songs are available
    any: 50
    easy: 0
    medium: 0
    hard: 0

  grade_needed:
    # Requires a grade of this or higher in order to get items.
    # Grades are as follows:
    # Silver S (SS): >= 95% accuracy
    # Pink S (S): >= 90% accuracy
    # A: >= 80% or a Full Combo
    # B: >= 70%
    # C: >= 60%
    any: 50
    c: 0
    b: 0
    a: 0
    pinks: 0
    silvers: 0

  music_sheet_count:
    # The amount of Music Sheets spread around this seed. Music Sheets are required to unlock the final song.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 12
    6: 50
    random: 0
    random-low: 0
    random-high: 0

  music_sheet_win_count:
    # The number of Music Sheets needed to unlock the winning song.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 12
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0
