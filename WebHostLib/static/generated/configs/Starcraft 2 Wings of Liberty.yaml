# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify your Archipelago settings are valid at this site:
#        https://archipelago.gg/check

# Your name in-game. Spaces will be replaced with underscores and there is a 16-character limit.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: Player{number}

# Used to describe your yaml. Useful if you have multiple files.
description: Default Starcraft 2 Wings of Liberty Template

game: Starcraft 2 Wings of Liberty
requires:
  version: 0.3.9 # Version of Archipelago required for this yaml to work as expected.

Starcraft 2 Wings of Liberty:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  game_difficulty:
    # The difficulty of the campaign, affects enemy AI, starting units, and game speed.
    casual: 50
    normal: 0
    hard: 0
    brutal: 0

  upgrade_bonus:
    # Determines what lab upgrade to use, whether it is Ultra-Capacitors which boost attack speed with every weapon
    # upgrade or Vanadium Plating which boosts life with every armor upgrade.
    ultra_capacitors: 50
    vanadium_plating: 0

  bunker_upgrade:
    # Determines what bunker lab upgrade to use, whether it is Shrike Turret which outfits bunkers with an automated
    # turret or Fortified Bunker which boosts the life of bunkers.
    shrike_turret: 50
    fortified_bunker: 0

  all_in_map:
    # Determines what version of All-In (final map) that will be generated for the campaign.
    ground: 50
    air: 0

  mission_order:
    # Determines the order the missions are played in.  The last three mission orders end in a random mission.
    # Vanilla (29): Keeps the standard mission order and branching from the WoL Campaign.
    # Vanilla Shuffled (29): Keeps same branching paths from the WoL Campaign but randomizes the order of missions within.
    # Mini Campaign (15): Shorter version of the campaign with randomized missions and optional branches.
    # Grid (16):  A 4x4 grid of random missions.  Start at the top-left and forge a path towards All-In.
    # Mini Grid (9):  A 3x3 version of Grid.  Complete the bottom-right mission to win.
    # Blitz (12):  12 random missions that open up very quickly.  Complete the bottom-right mission to win.
    # Gauntlet (7): Linear series of 7 random missions to complete the campaign.
    vanilla: 50
    vanilla_shuffled: 0
    mini_campaign: 0
    grid: 0
    mini_grid: 0
    blitz: 0
    gauntlet: 0

  shuffle_protoss:
    # Determines if the 3 protoss missions are included in the shuffle if Vanilla mission order is not enabled.
    # If turned off with Vanilla Shuffled, the 3 protoss missions will be in their normal position on the Prophecy chain
    #    if not shuffled.
    # If turned off with reduced mission settings, the 3 protoss missions will not appear and Protoss units are removed
    #     from the pool.
    false: 0
    true: 50

  shuffle_no_build:
    # Determines if the 5 no-build missions are included in the shuffle if Vanilla mission order is not enabled.
    # If turned off with Vanilla Shuffled, one no-build mission will be placed as the first mission and the rest will be
    #     placed at the end of optional routes.
    # If turned off with reduced mission settings, the 5 no-build missions will not appear.
    false: 0
    true: 50

  early_unit:
    # Guarantees that the first mission will contain a unit.
    false: 0
    true: 50

  required_tactics:
    # Determines the maximum tactical difficulty of the seed (separate from mission difficulty).  Higher settings
    # increase randomness.
    # 
    # Standard:  All missions can be completed with good micro and macro.
    # Advanced:  Completing missions may require relying on starting units and micro-heavy units.
    # No Logic:  Units and upgrades may be placed anywhere.  LIKELY TO RENDER THE RUN IMPOSSIBLE ON HARDER DIFFICULTIES!
    standard: 50
    advanced: 0
    no_logic: 0

  units_always_have_upgrades:
    # If turned on, both upgrades will be present for each unit and structure in the seed.
    # This usually results in fewer units.
    false: 0
    true: 50

  locked_items:
    # Guarantees that these items will be unlockable
    []

  excluded_items:
    # Guarantees that these items will not be unlockable
    []

  excluded_missions:
    # Guarantees that these missions will not appear in the campaign
    # Only applies on shortened mission orders.
    # It may be impossible to build a valid campaign if too many missions are excluded.
    []
